[tool.poetry]
name = "docs-genius"
version = "0.0.2"
description = "A Python package to improve and enforce PEP 257 docstring conventions in code."
authors = ["RodrigoGonzalez <r@rodrigo-gonzalez.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/rodrigogonzalez/docs-genius"
repository = "https://github.com/rodrigogonzalez/docs-genius"

# Standard classifiers at https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Typing :: Typed",
]

packages = [
    {include = "docs_genius", from = "src"},
]

[tool.poetry.dependencies]
python = "^3.10"
click = "^8.1.3"


[tool.poetry.group.dev.dependencies]
commitizen = "^2.42.1"
pre-commit = "^3.2.2"
ipython = "^8.12.0"
python-dotenv = "^1.0.0"



[tool.poetry.group.lint.dependencies]
isort = "^5.12.0"
black = "^23.3.0"
flake8 = "^6.0.0"
autoflake = "^2.0.2"
pyupgrade = "^3.3.1"
mypy = "^1.2.0"
lxml = "^4.9.2"


[tool.poetry.group.test.dependencies]
pytest = "^7.3.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.0.0"
respx = "^0.20.1"
trio = "^0.22.0"

[tool.isort]
profile = "black"
skip_glob = ["docs"]
line_length = 100
multi_line_output = 4
force_single_line = true
src_paths = ["src", "tests"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
known_first_party = ["docs_genius"]

[tool.black]
line-length = 100
target-version = ["py310"]
include = '\.pyi?$'
exclude = '''
    /(
        \.git
      | \.mypy_cache
      | \.mypy_html_report
      | \.venv
      | _build
      | build
      | dist
      | docs
    )/
'''

[tool.mypy]
# output
show_error_codes = true
show_column_numbers = true
show_error_context = true
show_traceback = true
# 3rd party import
ignore_missing_imports = true
# dynamic typing
disallow_any_unimported = true
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_explicit = true
disallow_any_generics = false
disallow_subclassing_any = true
# platform
python_version = "3.10"
# untyped
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
# None and Optional
no_implicit_optional = true
# strictness
explicit_package_bases = true
# Warnings
warn_return_any = false
warn_unreachable = true
# Misc
pretty = true



[tool.pytest.ini_options]
testpaths = ["src", "tests"]

[tool.coverage.report]
exclude_lines = [
    'if __name__ == "__main__":'
]

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.0.2"
tag_format = "$version"
version_files = [
    "pyproject.toml:version",
    "src/docs_genius/__init__.py:__version__",
]
update_changelog_on_bump = true
changelog_file = "CHANGELOG.md"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
